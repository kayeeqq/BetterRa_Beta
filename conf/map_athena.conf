//--------------------------------------------------------------
// rAthena 地圖服務器配置文件
//--------------------------------------------------------------
// 提示: 此配置文件中, 只要是以//作為開頭的行, 都是注釋信息. 
// 注釋信息您可以隨意修改, 都不會干扰服務器的正常運行. 
//--------------------------------------------------------------

// 登錄服務器、角色服務器、地圖服務器之間的內部通訊賬號和密碼

userid: s1
passwd: p1

// 角色服務器的IP地址
// 地圖服務器會依賴這個IP地址去和角色服務器建立連接. 
// 注意: 這個選項一般用于您的程序運行于防火牆后面, 
//       或者您的机器有多張网卡的時候比較有用. 
// 提醒: 若您想啟用char_ip選項的話, 記得去掉char_ip前面的注釋符//, 否則
//       服務器會忽略它, 導致配了和沒配一樣. 
// 
// ----------------------------------
// 多線路配置方法說明
// ----------------------------------
// 如果你是開單机測試服, 或者服務器只有1個公网IP地址的話, 
// 請無視這一段說明, 避免增加理解難度
// 
// 就算你的服務器有多個IP地址, 這里也只需填寫1個角色服務器的IP地址即可
// 推荐填寫從地圖服務器連接角色服務器時延遲(Ping值)最小的那個IP
//char_ip: 127.0.0.1

// 地圖服務器會監听來自這個IP地址的网卡信息
// 注意: 該選項允許你在有多個公网网卡(也意味著有多個公网IP)的机器上, 
//       使用相同的“地圖服務器端口”來開多個服. 
// 提醒: 若您想啟用bind_ip選項的話, 記得去掉bind_ip前面的注釋符//, 否則
//       服務器會忽略它, 導致配了和沒配一樣. 
//
// ----------------------------------
// 多線路配置方法說明
// ----------------------------------
// 如果你是開單机測試服, 或者服務器只有1個公网IP地址的話, 
// 請無視這一段說明, 避免增加理解難度
// 
// 如果需要多線路支持的話, 請 >>不要啟用<< bind_ip 選項,
// 這樣地圖服務器才能接收各個公网IP地址的連接請求.
//bind_ip: 127.0.0.1

// 角色服務器的端口, 方便地圖服務器和角色服務器建立連接
char_port: 6121

// 角色服務器連接超時時間, 如果角色服務器在指定時間內沒有響應, 則視為連接超時 (單位: 秒)
char_timeout: 5

// 角色服務器連接檢查間隔, 當与角色服務器斷開或者連接失敗時, 多久后嘗試重新連接時 (單位: 秒)
char_check_interval: 5

// 地圖服務器的IP地址
// 客戶端將會使用這里配置的IP地址來和地圖服務器建立連接. 
// 若您想對外開服(而不是開單机服)的話, 請把您的公网IP地址設置到這里. 
// 提醒: 若您想啟用map_ip選項的話, 記得去掉map_ip前面的注釋符//, 否則
//       服務器會忽略它, 導致配了和沒配一樣. 
//
// ----------------------------------
// 多線路配置方法說明
// ----------------------------------
// 如果你是開單机測試服, 或者服務器只有1個公网IP地址的話, 
// 請無視這一段說明, 避免增加理解難度
// 
// 如果你的服務器擁有多個IP, 且每個IP都歸屬于單獨的線路的話
// 可以在這里配置上你地圖服務器的全部可用的IP地址
//
// 假設你的電信IP是111.111.111.111 聯通IP是222.222.222.222
// 那么把這兩個IP地址(支持域名, 但不推荐)用逗號分隔的方式, 填寫到下面的選項中, 例如:
// 
// map_ip: 111.111.111.111,222.222.222.222
// 
// 這里配置多個線路的IP地址后, 還需要在 conf/multinet_athena.conf 中
// 進行一些簡單配置, 才能使多線路的支持生效.
// 
// 注意: 最多只能配置 4 個IP地址(即最多支持4個線路), 第一個IP將作為默認地址
//map_ip: 127.0.0.1

// 地圖服務器端口
map_port: 5121

// 往控制台窗口(俗稱:黑框)中輸出內容時, 在每行信息的前面加上時間戳. 
// 最大長度不能超過20個字符. 
// 常用的格式有:
//   %I:%M:%S %p (小時:分鐘:秒數 12小時制, 會攜帶AM或PM標記)
//   %H:%M:%S (小時:分鐘:秒數, 24小時制)
//   %d/%b/%Y (日期/月份/年份)
// 更多的格式信息, 請參考C語言的strftime函數用法. 
// 
// rAthena官方默認值是 [%d/%b %H:%M] 也就是24小時制的 [日/月 時:分]
// 不過這明顯不符合國人習慣, 為此BetterRa將其默認值改成了 [%Y/%m/%d %H:%M] 
// 
// 若想啟用時間戳的話, 請將下面這一行頭部的注釋符//去掉
//timestamp_format: [%Y/%m/%d %H:%M] 

// 當終端被一些加載器打開從而導致輸出信息被重定向時, 
// 是否也將顏色代碼一同輸出? 
// 
// 問: 什么是重定向? 
// 答: 原本地圖服務器的信息將直接顯示到自己的黑框, 不過若使用一些啟動工具
//     來啟動地圖服務器的話, 原本應該顯示到黑框的信息被顯示到了啟動工具里面的
//     一個列表之類, 這种情況稱之為“輸出信息被重定向了”! 
// 
// 問: 什么是顏色代碼? 
// 答: 在我們使用黑框的過程中, 會發現類似[Status]的字是綠色的, 
//     而[Error]是紅色的. 這是因為在程序往黑框輸出信息時, 加入了一些
//     顏色編碼, 比如若使用顏色編碼“\033[1;31m”那么則表示接下來的字用紅色輸出
//     其實有點類似我們腳本中使用的^xxxxxx顏色代碼. 
// 
// 此選項一般情況下推荐關閉
stdout_with_ansisequence: no

// 記錄地圖服務器黑框中產生的部分信息到/log/目錄中
// 首先您要确保rAthena的目錄中有一個log文件夾, 沒有的話必須手動創建, 
// 否則日志文件將不會產生. 
// 1: 記錄黑框中以  [Warning] 開頭的警告信息
// 2: 記錄黑框中以  [Error]   開頭的錯誤信息和數据庫錯誤信息
// 4: 記錄黑框中以  [Debug]   開頭的調試信息
// 例如: 想要記錄[Warning]、[Error]、[Debug]開頭的信息, 
//       只需要將1、2、4相加, 將 console_msg_log 設置為7即可(1+2+4=7)! 
// 
// 日志信息的記錄, 并不會被 console_silent 選項影響
// 也就是說, 假如 console_msg_log 設置為 2 想記錄 [Error] 信息, 而
// 在 console_silent 中設置為 16 想隱藏 [Error] 信息, 此時系統
// 將會隱藏[Error]信息, 与此同時記錄[Error]信息
console_msg_log: 7

// 將地圖服務器黑框中產生的要記錄的信息, 寫到下面指定的日志文件中
console_log_filepath: ./log/map-msg_log.log

// 選擇性隱藏地圖服務器黑框中顯示出來的一些提示信息: 
// 1:  隱藏黑框中以  [Info]    開頭的提示信息
// 2:  隱藏黑框中以  [Status]  開頭的狀態信息
// 4:  隱藏黑框中以  [Notice]  開頭的注意信息
// 8:  隱藏黑框中以  [Warning] 開頭的警告信息
// 16: 隱藏黑框中以  [Error]   開頭的錯誤信息和數据庫錯誤信息
// 32: 隱藏黑框中以  [Debug]   開頭的調試信息
// 若您想同時隱藏多种信息, 只需要將其對應的數字相加即可
// 例如: 若您想要隱藏[Info]、[Status]、[Notice]開頭的信息, 
//       那么只需要將1、2、4相加, 填寫7即可(1+2+4=7)! 
console_silent: 0

// 地圖服務器將去哪個目錄下讀取數据文件? 
db_path: db

// 是否啟用 @guildspy 和 @partyspy 指令? 
// 注意: 啟用這兩個指令會降低封包的發送性能, 請酌情處理
enable_spy: no

// 是否從grf-files.txt所配置的GRF文件或者data目錄中
// 讀取地圖數据(例如: Gat文件和Rsw文件), 而不是從地圖緩存文件中讀取? 
// 
// 問: 地圖緩存文件的位置是? 
// 答: 复興前在db\pre-re\map_cache.dat 复興后在 db\re\map_cache.dat
use_grf: no

// 是否啟用終端指令
// 開啟終端指令后, 您可以在map-server的黑框中輸入命令
// 在地圖服務器的黑框中輸入help然后回車, 可以查看終端指令說明
// 比如輸入admin:@reloadscrpit可以在不登錄GM賬號的情況下, 讓地圖服務器重載所有腳本
// 想要啟用這個功能的話, 請將下面的值改成on即可
// 請避免在地圖服務器中使用 >& 日志文件.log 這樣的輸出指令
console: off

// 每輪自動存檔的時間間隔
// 在線的玩家數据都會在設定的時間(以秒為單位)內被自動存檔
// 注意: 當你設定為300秒保存一輪的情況下, 如果有300個玩家在線, 
//       那么每秒鐘會保存1個玩家的數据. 
autosave_time: 300

// 最小存檔間隔(以毫秒為單位)
// 防止一個角色在短時間內被頻繁存檔, 降低在線人數非常多時角色服務器的存檔壓力
minsave_time: 100

// 下面是和 autosave_time 相關的一部分設置, 除了每輪自動存檔之外, 
// 當玩家進行下列操作之后, 也會被立刻存檔: 
// 1:   和玩家交易成功
// 2:   成功開啟露天商店/露天商店有東西賣出
// 4:   關閉個人倉庫/公會倉庫
// 8:   寵物被孵化/變回蛋狀態
// 16:  成功發送一封帶有附件的郵件
// 32:  成功在拍賣行提交一個物品
// 64:  接到/刪除/完成一個任務
// 128: 完成隨身銀行的存錢/取錢操作
// 256: After every attendance reward
// 4095: Always
// 提示: 此選項可以在一些經常崩潰的服務端上, 起到很重要的作用. 通過增加一些
//       關鍵的保存時机, 來避免玩家的數据丟失. 不過若您的服務端程序很少崩潰
//       那么可以關閉此選項(配置為0), 來降低內部服務器的通訊延遲. 
save_settings: 4095

// 聊天欄公告信息配置文件的路徑, 當角色登入游戲后, 里面的信息會顯示在聊天欄
motd_txt: conf/motd.txt

// 當一個GM使用 @help 或 @h 指令時, 會從下面的配置文件中加載相關的指令說明
charhelp_txt: conf/charhelp.txt

// 頻道系統的配置文件
channel_conf: conf/channels.conf

// 地圖相關的配置文件
// 在很久很久以前, 并沒有 maps_athena.conf 這個配置文件
// 那時候用來決定 map-server 會加載什么地圖, 都是直接寫在這個文件的底部
// 不過后來由于地圖是在太多了, 也擁有了配置文件的 import 机制
// 所以就將 map-server 會加載什么地圖的配置, 單獨放到了 maps_athena.conf 里面
import: conf/maps_athena.conf

// 配置想要使用的封包混淆密鑰
//
// rAthena 官方放棄了 db/packet_db.txt 文件
// 以后在這里配置自定義的封包混淆密鑰(若不配置, 則自動使用韓服官方客戶端默認的混淆密鑰).
//
// 關閉封包混淆机制的服務端不受此選項影響
// BetterRA 默認開啟混淆, 可在官网定制中關閉封包混淆功能.
// 
// 不想修改的話, 請保持默認值: default
// 若想修改的話, 格式為(英文逗號左右都不能有空格): 0x347D68D0,0x2C705320,0x7B4A199D
packet_keys: default

import: conf/import/map_conf.txt
