//--------------------------------------------------------------
// rAthena 登錄服務器配置文件
// 本配置文件由 Peter Kieser <pfak@telus.net> 翻譯成英文
//--------------------------------------------------------------
// 提示: 此配置文件中, 只要是以//作為開頭的行, 都是注釋信息. 
// 注釋信息您可以隨意修改, 都不會干扰服務器的正常運行. 
//--------------------------------------------------------------

// 登錄服務器會監听來自這個IP地址的网卡信息
// 注意: 該選項允許你在有多個公网网卡(也意味著有多個公网IP)的机器上, 
//       使用相同的“登錄服務器端口”來開多個服. 
// 提醒: 若您想啟用bind_ip選項的話, 記得去掉bind_ip前面的注釋符//, 否則
//       服務器會忽略它, 導致配了和沒配一樣. 
//bind_ip: 127.0.0.1
 
// 登錄服務器端口
login_port: 6900

// 往控制台窗口(俗稱:黑框)中輸出內容時, 在每行信息的前面加上時間戳. 
// 最大長度不能超過20個字符. 
// 常用的格式有:
//   %I:%M:%S %p (小時:分鐘:秒數 12小時制, 會攜帶AM或PM標記)
//   %H:%M:%S (小時:分鐘:秒數, 24小時制)
//   %d/%b/%Y (日期/月份/年份)
// 更多的格式信息, 請參考C語言的strftime函數用法. 
// 
// rAthena官方默認值是 [%d/%b %H:%M] 也就是24小時制的 [日/月 時:分]
// 不過這明顯不符合國人習慣, 將其默認值改成了 [%Y/%m/%d %H:%M] 
// 
// 若想啟用時間戳的話, 請將下面這一行頭部的注釋符//去掉
//timestamp_format: [%Y/%m/%d %H:%M] 

// 當終端被一些加載器打開從而導致輸出信息被重定向時, 
// 是否也將顏色代碼一同輸出? 
// 
// 問: 什么是重定向? 
// 答: 原本登錄服務器的信息將直接顯示到自己的黑框, 不過若使用一些啟動工具
//     來啟動登錄服務器的話, 原本應該顯示到黑框的信息被顯示到了啟動工具里面的
//     一個列表之類, 這种情況稱之為“輸出信息被重定向了”! 
// 
// 問: 什么是顏色代碼? 
// 答: 在我們使用黑框的過程中, 會發現類似[Status]的字是綠色的, 
//     而[Error]是紅色的. 這是因為在程序往黑框輸出信息時, 加入了一些
//     顏色編碼, 比如若使用顏色編碼“\033[1;31m”那么則表示接下來的字用紅色輸出
//     其實有點類似我們腳本中使用的^xxxxxx顏色代碼. 
// 
// 此選項一般情況下推荐關閉
stdout_with_ansisequence: no

// 記錄登錄服務器黑框中產生的部分信息到/log/目錄中
// 首先您要确保rAthena的目錄中有一個log文件夾, 沒有的話必須手動創建, 
// 否則日志文件將不會產生. 
// 1: 記錄黑框中以  [Warning] 開頭的警告信息
// 2: 記錄黑框中以  [Error]   開頭的錯誤信息和數据庫錯誤信息
// 4: 記錄黑框中以  [Debug]   開頭的調試信息
// 例如: 想要記錄[Warning]、[Error]、[Debug]開頭的信息, 
//       只需要將1、2、4相加, 將 console_msg_log 設置為7即可(1+2+4=7)! 
// 
// 日志信息的記錄, 并不會被 console_silent 選項影響
// 也就是說, 假如 console_msg_log 設置為 2 想記錄 [Error] 信息, 而
// 在 console_silent 中設置為 16 想隱藏 [Error] 信息, 此時系統
// 將會隱藏[Error]信息, 与此同時記錄[Error]信息
console_msg_log: 7

// 將登錄服務器黑框中產生的要記錄的信息, 寫到下面指定的日志文件中
console_log_filepath: ./log/login-msg_log.log

// 選擇性隱藏登錄服務器黑框中顯示出來的一些提示信息: 
// 1:  隱藏黑框中以  [Info]    開頭的提示信息
// 2:  隱藏黑框中以  [Status]  開頭的狀態信息
// 4:  隱藏黑框中以  [Notice]  開頭的注意信息
// 8:  隱藏黑框中以  [Warning] 開頭的警告信息
// 16: 隱藏黑框中以  [Error]   開頭的錯誤信息和數据庫錯誤信息
// 32: 隱藏黑框中以  [Debug]   開頭的調試信息
// 若您想同時隱藏多种信息, 只需要將其對應的數字相加即可
// 例如: 若您想要隱藏[Info]、[Status]、[Notice]開頭的信息, 
//       那么只需要將1、2、4相加, 填寫7即可(1+2+4=7)! 
console_silent: 0

// 是否啟用終端指令
// 開啟終端指令后, 您可以在login-server的黑框中輸入命令
// 在登錄服務器的黑框中輸入help然后回車, 可以查看終端指令說明
// 比如輸入server:reloadconf可以讓登錄服務器重新讀取相關的配置文件
// 還能輸入"create:用戶名 密碼 性別"（不含引號）來直接創建一個新賬號
// 想要啟用這個功能的話, 請將下面的值改成on即可
// 請避免在登錄服務器中使用 >& 日志文件.log 這樣的輸出指令
console: off

// 是否允許使用 _M/_F 的方式來注冊新賬號? 
// 注意: 僅在密碼加密未開啟時有效.
new_account: yes

// 若您將new_account設置為yes的話
// 那么是否要求新建的賬號和密碼的長度都必須大于等于4個字符? 
// 在一般情況下推荐設置為yes, 除非您在Diff客戶端的時候
// 啟用了'Disable 4 LetterUserID/Password'選項, 那么可以設置為no
new_acc_length_limit: yes

// 賬號注冊洪水攻擊防護机制
// 
// 問: 什么是賬號注冊洪水攻擊? 
// 答: 專門編寫一些程序, 在短時間內注冊成千上万個賬號, 這就是賬號注冊洪水攻擊. 
// 
// 問題在于設定為10秒中內允許1個賬號, 而實際上在10秒鐘內第 1 和第 2 個賬號
// 能注冊成功, 但第 3 個賬號就會由于這個防護机制而注冊失敗. 驗証于: 2015年7月4日21:54:14
// 
// 在 time_allowed 限定的時間內, 最多允許注冊几個賬號? 
allowed_regs: 1
// 下面的選項寫10的話(秒), 那么說明10秒中內最多只能注冊 allowed_regs 個賬號
time_allowed: 10

// 日志文件名
// 和登錄服務器相關的操作都會被記錄到這個文件中
// 
// 這個選項已經被rAthena棄用
// 代碼中根本沒有任何地方使用到此選項
// 大家請無視他, 避免浪費表情了
login_log_filename: log/login.log

// 是否記錄登錄服務器產生的日志
// 日志內容包括: 
//   登錄服務器啟動時記錄日志
//   登錄服務器關閉時記錄日志
//   某個用戶的鼠標密碼驗証失敗時記錄日志
//   某個用戶登錄成功
//   某個用戶登錄失敗
//   角色服務器和登錄服務器建立了連接
//   某個被加入黑名單的IP地址對登錄服務器發起連接請求
// 
// 日志信息默認情況下, 記錄在日志數据庫的loginlog表中
// 設置為1則表示記錄日志(默認), 設置為0則表示不記錄日志
log_login: yes

// 登錄服務器在顯示時間的時候, 用什么格式顯示? 
// 
// 這個字段被使用的地方其實比較有限, 目前找到下面兩個: 
// 1、當玩家登錄時如果這個賬號已經被封禁, 
//    那么會在登錄服務器的黑框中顯示出一個日期, 這個日期就遵循下面的格式. 
// 2、當角色服務器請求登錄服務器封禁一個賬號時, 
//    在登錄服務器的黑框中也會顯示出一個提示信息, 這個日期也會遵循下面的格式. 
date_format: %Y-%m-%d %H:%M:%S

// 僅 group_id 為“等于”指定數字的賬號才能登錄到服務器
// 假如您填寫的數字是 99 那么表示只有 group_id 等于 99 的賬號才能登錄到服務器
// 其他賬號登入時則會提示服務器正在維護, 無法登錄
// 
// 填寫 -1 表示關閉此机制(默認)
// 填寫 0或其他大于0的數 表示僅 group_id 為指定數值的賬號可登陸
group_id_to_connect: -1

// 僅 group_id 為“大于等于”指定數字的賬號才能登錄到服務器
// 假如您填寫的數字是 10 那么表示只有 group_id 大于等于 10 的賬號才能登錄到服務器
// 其他賬號登入時則會提示服務器正在維護, 無法登錄
// 
// 注意: 如果 group_id_to_connect 的值不是-1的話, 那么此開關無效
// 填寫 -1 表示關閉此机制(默認)
// 填寫 0或其他大于0的數 表示僅 group_id 大于等于指定數值的賬號可登陸
min_group_id_to_connect: -1

// 哪個group_id將被指定為VIP玩家組(即: VIP玩家組別)? 
// 默認值為: 5
// 當一個玩家被提升到VIP玩家組時, 那么他的group_id會從默認的0變成5
vip_group: 5

// 普通賬號允許建立几個角色? 
// 
// 你不能創建超過 MAX_CHARS 個賬號角色, 他在 mmo.hpp 中配置.
// 如果設置為 0, 則只能創建 MIN_CHARS 個角色.
chars_per_account: 0

// VIP 賬號允許比普通賬號多建立几個角色?
// 
// 注意: 此選項僅在啟用VIP會員系統情況下才有效, 默認不啟用VIP會員系統,
// 想要開啟的話請前往官网進行免費定制.
// 
// 此選項能夠設置的上限為 9 減去 chars_per_account 的值.
// 
// 默認值為: 0 (表示關閉此机制)
vip_char_increase: 0

// 剛創建的賬號有多長的游戲時間? 
// 若設置為 -1 表示新建的賬號擁有無限的游戲時間(默認)
// 若設置為 0 或者其他數字, 則表示新賬號將在指定的秒數之后過期
// 
// 當過期時間到了之后, 這個玩家若在線, 則會被強制下線, 并無法再登錄
// 除非完成續期操作, 才能重新進入游戲. 
start_limited_time: -1

// 在數据庫的 login 表中保存密碼時, 是否使用MD5哈希密碼? 
// 提示: 當客戶端使用 <passwordencrypt> 机制的話, 此功能不可用. 
// 
// 若你之前使用 no 選項, 現在想修改成 yes 的話, 需要在主數据庫中執行以下查詢語句:
// UPDATE `login` SET `user_pass`=MD5(`user_pass`);
// 否則修改此選項之前注冊的賬號將無法正常登錄. (感謝"好刀一把"建議).
use_MD5_passwords: no

// User count colorization on login window (requires PACKETVER >= 20170726)
// Disable colorization and description in general?
usercount_disable: no
// Amount of users that will display in green
usercount_low: 200
// Amount of users that will display in yellow
usercount_medium: 500
// Amount of users that will display in red
usercount_high: 1000

// IP地址黑名單功能
ipban_enable: yes
// 當密碼重試超過指定次數時, 將IP加入黑名單
ipban_dynamic_pass_failure_ban: yes
// 在几分鐘內密碼重試次數超過限制時, 加入黑名單? (默認5次)
ipban_dynamic_pass_failure_ban_interval: 5
// 當密碼重試次數達到多少次之后, 認為超過限制? (默認7次)
ipban_dynamic_pass_failure_ban_limit: 7
// 將IP加入黑名單后, 封禁多長時間(以分鐘為單位)? (默認5分鐘)
ipban_dynamic_pass_failure_ban_duration: 5
// 每間隔多長時間自動清理過了封禁期的IP地址? 0 = 不清理. 默認值為 60.
// 提示: 如果設置為不清理, 那么過了封禁期的IP地址將會在登錄服務器啟動和退出時被清空. 
// 玩家的IP地址雖然還在黑名單列表中, 不過由于已經過了封禁期, 所以玩家可以正常登錄. 
ipban_cleanup_interval: 60

// 間隔多長時間(分鐘)進行一次DNS/IP更新? (此功能默認關閉)
// 若您的服務器使用的是動態IP地址, 且每過一段時間IP地址會自動變化的話, 請啟用此選項. 
//ip_sync_interval: 10

// DNS封禁黑名單机制
// 若啟用此机制, 任何連接請求都會先檢查對方是否在黑名單中, 若在黑名單中則禁止連接
// 
// 問: 為什么叫“DNS封禁黑名單”? 
// 答: 因為系統用來判定對方是否在黑名單中的根据, 是將IP地址組成一個域名, 然后看看
//     這個域名是否已經被DNS服務器所解析, 若是, 則認為對方在黑名單中. 
// 
// 問: 具体的工作机制是什么樣的? 
// 答: 當一個服務器收到連接請求時, 會先獲得對方的IP地址, 比如127.0.0.1, 然后將這個
//     IP地址反序, 變成1.0.0.127, 然后拼接上 dnsbl_servers 所指定的DNS服務器, 比如
//     若和 bl.blocklist.de 拼接, 那么最終會拿到一個為 1.0.0.127.bl.blocklist.de 的
//     域名, 然后對這個域名做解析, 如果解析成功, 則認為對方在黑名單內. 
// 
// 問: 為什么會有這樣的机制存在? 
// 答: 在國外會有一些安全机构(或者個人), 他們會找出一些攻擊過某些服務器的IP地址, 將
//     他們用上面的方式變成一個域名, 并完成解析來標記這個IP地址為坏人, 
//     以此來協助其他人, 來快速的識別一個IP地址是否可以信任. 
// 
// 問: 會有什么副作用么? 
// 答: 從原理上講, 啟用這個机制會導致每一次連接都會做IP地址檢查, 所以開啟之前玩家
//     輸入賬號密碼后登錄會很快的返回登錄結果, 開啟之后可能要比原來多花1-2秒的時間! 
//     此外, 這個机制依賴服務器本身的DNS服務器可靠性, 假設有人劫持您的DNS解析結果, 
//     讓每一個請求都返回“已解析”的樣子, 那么會導致登錄服務器拒絕一切連接. 
use_dnsbl: no
dnsbl_servers: bl.blocklist.de, socks.dnsbl.sorbs.net
// 在這里可以查到免費的DNS黑名單服務: http://en.wikipedia.org/wiki/Comparison_of_DNS_blacklists
//==============================================================================
// DNS黑名單服務                   描述
// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
// bl.blocklist.de                 攻擊其他服務器(或者蜜罐)的SSH、FTP、IMAP等其他服務的攻擊者IP地址
// ircbl.ahbl.org                  AHBL (open proxies, compromised machines, comment spammers)
// safe.dnsbl.sorbs.net            All zones in dnsbl.sorbs.net except "recent" and "escalations"
// sbl-xbl.spamhaus.org            Spamhaus blacklist (spammers, open proxies)
// socks.dnsbl.sorbs.net           開放的SOCKS代理服務器IP地址
// tor.ahbl.org                    Current tor relay and exit nodes

// 客戶端MD5指紋校驗
// 若打開此選項, 那么登錄服務器會校驗客戶端的MD5指紋
// 如果是不認識的客戶端, 則禁止連接到服務器
// 提示: 您可以查看 'doc/md5_hashcheck.txt' 以便獲得更詳細的信息.
client_hash_check: off

// Enable web authentication token system
// This is required for new clients that get data via an additional API over HTTP
use_web_auth_token: yes
// 客戶端MD5指紋列表
// 只有 group_id 大于等于指定數值的玩家, 可以使用指定指紋的客戶端登錄游戲
// 
// 當您特殊指定一個指紋為 'disabled' 的話, 則表示 group_id 大于等于指定數值的玩家
//     可以無視客戶端指紋限制, 隨時都可以登錄游戲(哪怕客戶端不發送MD5指紋都可以登錄)
// 
// 注意: 想使用此功能, 那么必須在Diff客戶端的時候, 讓客戶端發送指紋封包
// 做法: 在使用NEMO對客戶端進行Diff的時候, 需要啟用 'Force Send Client Hash Packet (Experimental)' 選項
// 
// 格式: group_id, hash指紋
// 提示: 您可以查看 'doc/md5_hashcheck.txt' 以便獲得更詳細的信息.
// 
// 下面這個例子中, group_id大于等于  0 的玩家可使用指紋為 113e195e6c051bb1cfb12a644bb084c5 的客戶端登錄
//client_hash: 0, 113e195e6c051bb1cfb12a644bb084c5
// 
// 下面這個例子中, group_id大于等于 10 的玩家可使用指紋為 cb1ea78023d337c38e8ba5124e2338ae 的客戶端登錄
//client_hash: 10, cb1ea78023d337c38e8ba5124e2338ae
//
// 下面這個例子中, group_id大于等于 99 的玩家可無視指紋登錄限制, 使用任何客戶端都可以登錄
//client_hash: 99, disabled

import: conf/inter_athena.conf
import: conf/import/login_conf.txt
